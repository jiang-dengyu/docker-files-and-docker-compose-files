# 此docker-compose建立laravel專案相關容器：使用php+apache image/ mysql image/ composer image
# 無使用docker-file生成image
# 選擇apache跟php分開各自的官方image
services:
  apache0108:
    image: httpd # 使用預建鏡像，已包含必要的 PHP 擴展
    container_name: apache0108
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./apache0108-data:/var/www/html
    networks:
      - shared-network
    depends_on:

      
      - 
  php0108:
    image: php:8.2 # 使用預建鏡像，已包含必要的 PHP 擴展
    container_name: php0108
    restart: always
    volumes:
      - ./php0108-data:/var/www/html
    networks:
      - shared-network
    depends_on:

      
      - 
  msql0108:
    image: mysql:8.0
    container_name: mysql0108
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql0108-data:/var/lib/mysql
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  composer0108:
    image: composer:latest
    container_name: composer0108
    volumes:
      - ./php0108-data-data:/var/www/html
    working_dir: /var/www/html
    networks:
      - shared-network
    depends_on:
      - mysql0108
    # 不需要預設的 command，讓它作為一個工具容器使用

networks:
  shared-network:


volumes:
  apache0108-data:
  php0108-data:
  mysql0108-data:
